{"version":3,"sources":["BooksAPI.js","SearchPage.js","Book.js","MainPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","SearchPage","state","searchedBooks","updateQuery","_this","setState","updateSearchedBooks","BooksAPI","error","_this2","this","react_default","a","createElement","className","react_router_dom","to","type","placeholder","value","onChange","event","target","map","searchedBook","props","key","src_Book","moveShelf","currentShelf","React","Component","Book","style","width","height","backgroundImage","imageLinks","thumbnail","disabled","title","authors","MainPage","filter","BooksApp","console","log","_this3","react_router","exact","path","render","src_MainPage","src_SearchPage","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2f554137.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from \"react\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport {Link} from \"react-router-dom\";\n\n\nclass SearchPage extends React.Component {\n  state = {\n    query: \"\",\n    searchedBooks: [],\n  };\n\n  updateQuery = (query) => {\n    this.setState({\n      query: query,\n    });\n    this.updateSearchedBooks(query);\n  };\n\n  updateSearchedBooks = (query) => {\n    if (query) {\n      BooksAPI.search(query).then((searchedBooks) => {\n        if (searchedBooks.error) \n          {this.setState({ searchedBooks: []})} \n        else {\n          this.setState({searchedBooks: searchedBooks});\n          }\n        })\n    } else {\n      this.setState({searchedBooks:[]})\n    }\n      }\n  \n\n  render() {\n\n\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">  \n          <Link \n          to=\"/\"\n          className=\"close-search\"> Close</Link>\n    \n          <div className=\"search-books-input-wrapper\">\n            {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n            <input\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n              value={this.state.query}\n              onChange={(event) => this.updateQuery(event.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n            {\n            this.state.searchedBooks.map(searchedBook => {\n              let shelf =\"none\";\n\n              this.props.books.map(book => (\n                book.id === searchedBook.id ?\n                shelf = book.shelf : \n                ''\n                ));\n\n              return (\n                <li key={searchedBook.id}>\n                  <Book \n                  book ={searchedBook}\n                  moveShelf={this.props.moveShelf}\n                  currentShelf={shelf}\n                  />\n                </li>)\n              \n\n              \n        })\n        }\n          </ol>\n        </div>\n      </div>\n  ) \n}\n}\n\nexport default SearchPage;\n","import React from \"react\";\nimport * as SearchPage from \"./SearchPage\";\nimport * as MainPage from \"./MainPage\";\n\nclass Book extends React.Component {\n  render() {\n    return (\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div\n            className=\"book-cover\"\n            style={{\n              width: 128,\n              height: 192,\n              backgroundImage: `url(\"${ this.props.book.imageLinks && this.props.book.imageLinks.thumbnail }\")`\n            }}\n          />\n          <div className=\"book-shelf-changer\">\n            <select\n              onChange={(event) =>\n                this.props.moveShelf(this.props.book, event.target.value)\n              }\n              value={this.props.currentShelf}\n            >\n              <option value=\"move\" disabled>\n                Move to...\n              </option>\n              <option value=\"currentlyReading\">Currently Reading</option>\n              <option value=\"wantToRead\">Want to Read</option>\n              <option value=\"read\">Read</option>\n              <option value=\"none\">None</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"book-title\">{this.props.book.title}</div>\n        <div className=\"book-authors\">{this.props.book.authors}</div>\n      </div>\n    );\n  }\n}\nexport default Book;\n","import React from \"react\";\nimport Book from \"./Book\";\nimport {Link} from 'react-router-dom';\n\n\n\nclass MainPage extends React.Component {\n  render() {\n    return (\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n        <div className=\"list-books-content\">\n          <div>\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Currently Reading</h2>\n              <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                {this.props.books\n                    .filter((book) => book.shelf === \"currentlyReading\")\n                    .map((book) => (\n                      <li key={book.id}>\n                        <Book\n                        book={book}\n                        moveShelf={this.props.moveShelf}\n                        currentShelf=\"currentlyReading\"\n                        />\n                        </li>\n                    ))}\n                \n                </ol>\n              </div>\n            </div>\n\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Want to Read</h2>\n              <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                  {this.props.books\n                    .filter((book) => book.shelf === \"wantToRead\")\n                    .map((book) => (\n                      <li key={book.id}>\n                        <Book\n                        book={book}\n                        moveShelf={this.props.moveShelf}\n                        currentShelf =\"wantToRead\"\n                        />\n                  \n                        </li>\n                    ))}\n                </ol>\n              </div>\n            </div>\n\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Read</h2>\n              <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                {this.props.books\n                    .filter((book) => book.shelf === \"read\")\n                    .map((book) => (\n                      <li key={book.id}>\n                        <Book\n                        book={book}\n                        moveShelf={this.props.moveShelf}\n                        currentShelf=\"read\"\n                        /></li>\n                    ))}\n                </ol>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"open-search\">\n          <Link to=\"/search\">\n            Click here to add a book!\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport MainPage from \"./MainPage\";\nimport SearchPage from \"./SearchPage\";\nimport \"./App.css\";\nimport * as booksAPI from \"./BooksAPI\";\nimport { Route } from \"react-router-dom\";\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n  };\n\n  componentDidMount() {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books: books });\n    });\n    console.log(this.state.books);\n  }\n\n  moveShelf = (book, shelf) => {\n    BooksAPI.update(book, shelf);\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books: books });\n    });\n  };\n\n  render() {\n    console.log(this.state.books);\n    return (\n      <div className=\"app\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <MainPage \n            books={this.state.books} \n            moveShelf={this.moveShelf} />\n          )}\n        />\n\n        <Route\n          path=\"/search\"\n          render={() => \n          <SearchPage \n            moveShelf={this.moveShelf} \n            books={this.state.books}/>}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from 'react'\nimport App from './App'\nimport './index.css'\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n<BrowserRouter><App /></BrowserRouter>,\ndocument.getElementById('root'))\n"],"sourceRoot":""}